[{"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\index.js":"1","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\NotFoundScreen.jsx":"2","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PrivateRoute.jsx":"3","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PublicRoute.jsx":"4","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\LoginScreen.jsx":"5","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Form.jsx":"6","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navbar.jsx":"7","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\GroupForm.jsx":"8","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormCheck.jsx":"9","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Button.jsx":"10","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\RegisterScreen.jsx":"11","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\config.js":"12","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Logo.jsx":"13","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\HomeScreen.jsx":"14","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Search.jsx":"15","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonic.jsx":"16","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\UserScreen.jsx":"17","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MnemonicScreen.jsx":"18","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\App.js":"19","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormNavigation.jsx":"20","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navs.jsx":"21","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\Submit.jsx":"22","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Alert.jsx":"23","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Nothing.jsx":"24","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportMnemonic.jsx":"25","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\MessageBox.jsx":"26","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\colors.js":"27","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Editor.jsx":"28","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportUser.jsx":"29","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\user.js":"30","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\mnemonic.js":"31","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\category.js":"32","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\me.js":"33","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MeScreen.jsx":"34","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\reportWebVitals.js":"35","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonics.jsx":"36","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Loading.jsx":"37"},{"size":690,"mtime":1611604493963,"results":"38","hashOfConfig":"39"},{"size":347,"mtime":1611955278519,"results":"40","hashOfConfig":"39"},{"size":408,"mtime":1611951125137,"results":"41","hashOfConfig":"39"},{"size":417,"mtime":1611949023239,"results":"42","hashOfConfig":"39"},{"size":1479,"mtime":1612029042525,"results":"43","hashOfConfig":"39"},{"size":1207,"mtime":1612090974712,"results":"44","hashOfConfig":"39"},{"size":1415,"mtime":1611951324782,"results":"45","hashOfConfig":"39"},{"size":699,"mtime":1611602342702,"results":"46","hashOfConfig":"39"},{"size":641,"mtime":1611738510776,"results":"47","hashOfConfig":"39"},{"size":1117,"mtime":1612089685107,"results":"48","hashOfConfig":"39"},{"size":1905,"mtime":1612029037477,"results":"49","hashOfConfig":"39"},{"size":123,"mtime":1611579584982,"results":"50","hashOfConfig":"39"},{"size":504,"mtime":1611600357014,"results":"51","hashOfConfig":"39"},{"size":210,"mtime":1612177043476,"results":"52","hashOfConfig":"39"},{"size":1352,"mtime":1612177518473,"results":"53","hashOfConfig":"39"},{"size":3191,"mtime":1612092892136,"results":"54","hashOfConfig":"39"},{"size":1262,"mtime":1612035669930,"results":"55","hashOfConfig":"39"},{"size":666,"mtime":1611955170894,"results":"56","hashOfConfig":"39"},{"size":1976,"mtime":1611954620978,"results":"57","hashOfConfig":"39"},{"size":1031,"mtime":1611603073478,"results":"58","hashOfConfig":"39"},{"size":562,"mtime":1611694443700,"results":"59","hashOfConfig":"39"},{"size":1949,"mtime":1612094140267,"results":"60","hashOfConfig":"39"},{"size":240,"mtime":1611691425938,"results":"61","hashOfConfig":"39"},{"size":155,"mtime":1611660103138,"results":"62","hashOfConfig":"39"},{"size":1302,"mtime":1612029147382,"results":"63","hashOfConfig":"39"},{"size":1191,"mtime":1611694305402,"results":"64","hashOfConfig":"39"},{"size":247,"mtime":1611694572772,"results":"65","hashOfConfig":"39"},{"size":988,"mtime":1612092330416,"results":"66","hashOfConfig":"39"},{"size":1266,"mtime":1612030722286,"results":"67","hashOfConfig":"39"},{"size":564,"mtime":1612032667593,"results":"68","hashOfConfig":"39"},{"size":1401,"mtime":1612175398757,"results":"69","hashOfConfig":"39"},{"size":259,"mtime":1611951783742,"results":"70","hashOfConfig":"39"},{"size":2180,"mtime":1612087720295,"results":"71","hashOfConfig":"39"},{"size":3883,"mtime":1612035754377,"results":"72","hashOfConfig":"39"},{"size":362,"mtime":1606146488980,"results":"73","hashOfConfig":"39"},{"size":2757,"mtime":1612177270284,"results":"74","hashOfConfig":"39"},{"size":156,"mtime":1612090959882,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1547hz0",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\index.js",[],["159","160"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\NotFoundScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PrivateRoute.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PublicRoute.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\LoginScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Form.jsx",["161"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navbar.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\GroupForm.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormCheck.jsx",[],["162","163"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Button.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\RegisterScreen.jsx",[],["164","165"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\config.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Logo.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\HomeScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Search.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonic.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\UserScreen.jsx",["166"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { getUser } from \"../../api/user\";\r\nimport Mnemonics from \"../other/Mnemonics\";\r\nimport Navs from \"../other/Navs\";\r\n\r\nfunction User({ history, match }) {\r\n  const [user, setUser] = useState({});\r\n  const { url, params } = match;\r\n\r\n  const handleGetUser = async () => {\r\n    try {\r\n      const { data: user } = await getUser(params.id);\r\n      setUser(user);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetUser();\r\n  }, []);\r\n\r\n  const navs = () => {\r\n    return [\r\n      {\r\n        to: `${url}/posts`,\r\n        text: \"Posts\",\r\n      },\r\n      {\r\n        to: `/report-user/${params.id}`,\r\n        text: \"Report User\",\r\n      },\r\n    ];\r\n  };\r\n\r\n  const { fullname, username } = user;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Navs navs={navs()} />\r\n\r\n      <div>\r\n        <h1>{fullname}</h1>\r\n        <h5>@{username}</h5>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route\r\n          path=\"/user/:id/posts\"\r\n          render={() => <Mnemonics query={{ author: params.id }} />}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MnemonicScreen.jsx",["167"],"import React, { useEffect, useState } from \"react\";\r\nimport { getMnemonic } from \"../../api/mnemonic\";\r\nimport Mnemonic from \"../other/Mnemonic\";\r\n\r\nfunction MnemonicScreen({ history, match }) {\r\n  const [mnemonic, setMnemonic] = useState({});\r\n  const { params } = match;\r\n\r\n  const handleGetMnemonic = async () => {\r\n    try {\r\n      const { data: mnemonic } = await getMnemonic(params.id);\r\n      setMnemonic(mnemonic);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetMnemonic();\r\n  }, []);\r\n\r\n  return <Mnemonic mnemonic={mnemonic} />;\r\n}\r\n\r\nexport default MnemonicScreen;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\App.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormNavigation.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navs.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\Submit.jsx",["168"],"import React, { useEffect, useState } from \"react\";\r\nimport Form from \"../forms/Form\";\r\nimport FormGroup from \"../forms/GroupForm\";\r\nimport Button from \"../other/Button\";\r\nimport Editor from \"../forms/Editor\";\r\nimport { getCategories } from \"../../api/category\";\r\nimport { createMnemonic } from \"../../api/mnemonic\";\r\n\r\nfunction Submit(props) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  // const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    handleGetCategories();\r\n  }, []);\r\n\r\n  const handleGetCategories = async () => {\r\n    try {\r\n      const { data } = await getCategories();\r\n      setCategories(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    await createMnemonic({ title, content, categories });\r\n  };\r\n\r\n  const addCategories = (e) => {\r\n    // const keyCode = window.event ? e.which : e.keyCode;\r\n    // if (keyCode !== 13) return;\r\n    // const value = e.target.value;\r\n    // const c = [...newCategories, value];\r\n    // setNewCategories(c);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n\r\n        <Editor label=\"Content\" value={content} onChange={setContent} />\r\n\r\n        {/* <div>\r\n          {categories.map((category) => (\r\n            <span key={category._id}>{category.name}</span>\r\n          ))}\r\n          {newCategories.map((category) => (\r\n            <span>{category}</span>\r\n          ))}\r\n          <input type=\"text\" placeholder=\"Categories\" onKeyUp={addCategories} />\r\n        </div> */}\r\n\r\n        <br />\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Submit;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Alert.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Nothing.jsx",[],["169","170"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportMnemonic.jsx",["171"],"import React, { useEffect, useState } from \"react\";\r\nimport { getMnemonic, reportMnemonic } from \"../../api/mnemonic\";\r\nimport Form from \"../forms/Form\";\r\nimport FormGroup from \"../forms/GroupForm\";\r\nimport Button from \"../other/Button\";\r\n\r\nfunction ReportMnemonic({ history, match, location }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const { params } = match;\r\n\r\n  const handleGetMnemonic = async () => {\r\n    try {\r\n      await getMnemonic(params.id);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetMnemonic();\r\n  }, []);\r\n\r\n  const handleReport = async () => {\r\n    await reportMnemonic({ _id: params.id, title, content });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleReport} location={location}>\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <Button type=\"submit\">Report</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportMnemonic;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\MessageBox.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\colors.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Editor.jsx",["172"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportUser.jsx",["173"],"import React, { useEffect, useState } from \"react\";\r\nimport { getUser, reportUser } from \"../../api/user\";\r\nimport Form from \"../forms/Form\";\r\nimport FormGroup from \"../forms/GroupForm\";\r\nimport Button from \"../other/Button\";\r\n\r\nfunction ReportUser({ history, match, location }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const { params } = match;\r\n\r\n  const handleGetUser = async () => {\r\n    try {\r\n      await getUser(params.id);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetUser();\r\n  }, []);\r\n\r\n  const handleReport = async () => {\r\n    await reportUser({ _id: params.id, title, content });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleReport} location={location}>\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <Button type=\"submit\">Report</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportUser;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\user.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\mnemonic.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\category.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\me.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MeScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\reportWebVitals.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonics.jsx",["174"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Loading.jsx",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":23,"column":6,"nodeType":"181","endLine":23,"endColumn":8,"suggestions":"182"},{"ruleId":"175","replacedBy":"183"},{"ruleId":"177","replacedBy":"184"},{"ruleId":"175","replacedBy":"185"},{"ruleId":"177","replacedBy":"186"},{"ruleId":"179","severity":1,"message":"187","line":23,"column":6,"nodeType":"181","endLine":23,"endColumn":8,"suggestions":"188"},{"ruleId":"179","severity":1,"message":"189","line":21,"column":6,"nodeType":"181","endLine":21,"endColumn":8,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":32,"column":9,"nodeType":"193","messageId":"194","endLine":32,"endColumn":22},{"ruleId":"175","replacedBy":"195"},{"ruleId":"177","replacedBy":"196"},{"ruleId":"179","severity":1,"message":"189","line":23,"column":6,"nodeType":"181","endLine":23,"endColumn":8,"suggestions":"197"},{"ruleId":"191","severity":1,"message":"198","line":25,"column":7,"nodeType":"193","messageId":"194","endLine":25,"endColumn":12},{"ruleId":"179","severity":1,"message":"187","line":23,"column":6,"nodeType":"181","endLine":23,"endColumn":8,"suggestions":"199"},{"ruleId":"179","severity":1,"message":"200","line":77,"column":6,"nodeType":"181","endLine":77,"endColumn":8,"suggestions":"201"},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.","ArrayExpression",["204"],["202"],["203"],["202"],["203"],"React Hook useEffect has a missing dependency: 'handleGetUser'. Either include it or remove the dependency array.",["205"],"React Hook useEffect has a missing dependency: 'handleGetMnemonic'. Either include it or remove the dependency array.",["206"],"no-unused-vars","'addCategories' is assigned a value but never used.","Identifier","unusedVar",["202"],["203"],["207"],"'style' is assigned a value but never used.",["208"],"React Hook useEffect has a missing dependency: 'handleGet'. Either include it or remove the dependency array.",["209"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"214","fix":"216"},{"desc":"212","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [location]",{"range":"220","text":"221"},"Update the dependencies array to be: [handleGetUser]",{"range":"222","text":"223"},"Update the dependencies array to be: [handleGetMnemonic]",{"range":"224","text":"225"},{"range":"226","text":"225"},{"range":"227","text":"223"},"Update the dependencies array to be: [handleGet]",{"range":"228","text":"229"},[646,648],"[location]",[620,622],"[handleGetUser]",[577,579],"[handleGetMnemonic]",[663,665],[635,637],[2171,2173],"[handleGet]"]