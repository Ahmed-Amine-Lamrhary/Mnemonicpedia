[{"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\index.js":"1","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\NotFoundScreen.jsx":"2","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PrivateRoute.jsx":"3","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PublicRoute.jsx":"4","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\LoginScreen.jsx":"5","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Form.jsx":"6","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navbar.jsx":"7","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\GroupForm.jsx":"8","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormCheck.jsx":"9","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Button.jsx":"10","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\RegisterScreen.jsx":"11","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\config.js":"12","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Logo.jsx":"13","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\HomeScreen.jsx":"14","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonic.jsx":"15","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\UserScreen.jsx":"16","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MnemonicScreen.jsx":"17","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\App.js":"18","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormNavigation.jsx":"19","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navs.jsx":"20","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\Submit.jsx":"21","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Alert.jsx":"22","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Nothing.jsx":"23","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportMnemonic.jsx":"24","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\MessageBox.jsx":"25","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\colors.js":"26","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Editor.jsx":"27","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportUser.jsx":"28","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\user.js":"29","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\mnemonic.js":"30","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\category.js":"31","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\me.js":"32","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MeScreen.jsx":"33","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\reportWebVitals.js":"34","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonics.jsx":"35","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Loading.jsx":"36","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\GroupFormDropdown.jsx":"37"},{"size":690,"mtime":1611604493963,"results":"38","hashOfConfig":"39"},{"size":347,"mtime":1611955278519,"results":"40","hashOfConfig":"39"},{"size":408,"mtime":1611951125137,"results":"41","hashOfConfig":"39"},{"size":409,"mtime":1611951119256,"results":"42","hashOfConfig":"39"},{"size":1479,"mtime":1612029042525,"results":"43","hashOfConfig":"39"},{"size":1207,"mtime":1612090974712,"results":"44","hashOfConfig":"39"},{"size":1415,"mtime":1611951324782,"results":"45","hashOfConfig":"39"},{"size":699,"mtime":1612302428983,"results":"46","hashOfConfig":"39"},{"size":641,"mtime":1611738510776,"results":"47","hashOfConfig":"39"},{"size":1117,"mtime":1612089685107,"results":"48","hashOfConfig":"39"},{"size":1905,"mtime":1612029037477,"results":"49","hashOfConfig":"39"},{"size":123,"mtime":1611579584982,"results":"50","hashOfConfig":"39"},{"size":504,"mtime":1611600357014,"results":"51","hashOfConfig":"39"},{"size":210,"mtime":1612472202178,"results":"52","hashOfConfig":"39"},{"size":4041,"mtime":1612475099580,"results":"53","hashOfConfig":"39"},{"size":1262,"mtime":1612035669930,"results":"54","hashOfConfig":"39"},{"size":666,"mtime":1611955170894,"results":"55","hashOfConfig":"39"},{"size":2039,"mtime":1612475249689,"results":"56","hashOfConfig":"39"},{"size":1031,"mtime":1611603073478,"results":"57","hashOfConfig":"39"},{"size":562,"mtime":1611694443700,"results":"58","hashOfConfig":"39"},{"size":3017,"mtime":1612476011760,"results":"59","hashOfConfig":"39"},{"size":240,"mtime":1611691425938,"results":"60","hashOfConfig":"39"},{"size":155,"mtime":1611660103138,"results":"61","hashOfConfig":"39"},{"size":1302,"mtime":1612029147382,"results":"62","hashOfConfig":"39"},{"size":1191,"mtime":1611694305402,"results":"63","hashOfConfig":"39"},{"size":247,"mtime":1611694572772,"results":"64","hashOfConfig":"39"},{"size":922,"mtime":1612302289726,"results":"65","hashOfConfig":"39"},{"size":1266,"mtime":1612030722286,"results":"66","hashOfConfig":"39"},{"size":564,"mtime":1612032667593,"results":"67","hashOfConfig":"39"},{"size":1649,"mtime":1612476217109,"results":"68","hashOfConfig":"39"},{"size":376,"mtime":1612342901645,"results":"69","hashOfConfig":"39"},{"size":2180,"mtime":1612087720295,"results":"70","hashOfConfig":"39"},{"size":3883,"mtime":1612035754377,"results":"71","hashOfConfig":"39"},{"size":362,"mtime":1606146488980,"results":"72","hashOfConfig":"39"},{"size":5024,"mtime":1612474763599,"results":"73","hashOfConfig":"39"},{"size":156,"mtime":1612090959882,"results":"74","hashOfConfig":"39"},{"size":585,"mtime":1612302966439,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1547hz0",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"85"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"107"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"107"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"85"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\index.js",[],["160","161"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\NotFoundScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PrivateRoute.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PublicRoute.jsx",[],["162","163"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\LoginScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Form.jsx",["164"],"import React, { useEffect, useState } from \"react\";\r\nimport Alert from \"./Alert\";\r\nimport Loading from \"./../other/Loading\";\r\n\r\nfunction Form({ onSubmit, location, children }) {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSuccess(\"\");\r\n    setError(\"\");\r\n\r\n    if (location) {\r\n      if (location.state) {\r\n        const { message } = location.state;\r\n        if (message) {\r\n          if (message.type === \"success\") setSuccess(message.value);\r\n          else setError(message.value);\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      await onSubmit();\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.response.data.error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Loading loading={loading} />\r\n      <Alert message={error} type=\"danger\" />\r\n      <Alert message={success} type=\"success\" />\r\n\r\n      <form onSubmit={handleSubmit}>{children}</form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navbar.jsx",[],["165","166"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\GroupForm.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormCheck.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Button.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\RegisterScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\config.js",[],["167","168"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Logo.jsx",[],["169","170"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\HomeScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonic.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\UserScreen.jsx",["171"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { getUser } from \"../../api/user\";\r\nimport Mnemonics from \"../other/Mnemonics\";\r\nimport Navs from \"../other/Navs\";\r\n\r\nfunction User({ history, match }) {\r\n  const [user, setUser] = useState({});\r\n  const { url, params } = match;\r\n\r\n  const handleGetUser = async () => {\r\n    try {\r\n      const { data: user } = await getUser(params.id);\r\n      setUser(user);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetUser();\r\n  }, []);\r\n\r\n  const navs = () => {\r\n    return [\r\n      {\r\n        to: `${url}/posts`,\r\n        text: \"Posts\",\r\n      },\r\n      {\r\n        to: `/report-user/${params.id}`,\r\n        text: \"Report User\",\r\n      },\r\n    ];\r\n  };\r\n\r\n  const { fullname, username } = user;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Navs navs={navs()} />\r\n\r\n      <div>\r\n        <h1>{fullname}</h1>\r\n        <h5>@{username}</h5>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route\r\n          path=\"/user/:id/posts\"\r\n          render={() => <Mnemonics query={{ author: params.id }} />}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MnemonicScreen.jsx",["172"],"import React, { useEffect, useState } from \"react\";\r\nimport { getMnemonic } from \"../../api/mnemonic\";\r\nimport Mnemonic from \"../other/Mnemonic\";\r\n\r\nfunction MnemonicScreen({ history, match }) {\r\n  const [mnemonic, setMnemonic] = useState({});\r\n  const { params } = match;\r\n\r\n  const handleGetMnemonic = async () => {\r\n    try {\r\n      const { data: mnemonic } = await getMnemonic(params.id);\r\n      setMnemonic(mnemonic);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetMnemonic();\r\n  }, []);\r\n\r\n  return <Mnemonic mnemonic={mnemonic} />;\r\n}\r\n\r\nexport default MnemonicScreen;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\App.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormNavigation.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navs.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\Submit.jsx",["173"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Alert.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Nothing.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportMnemonic.jsx",["174"],"import React, { useEffect, useState } from \"react\";\r\nimport { getMnemonic, reportMnemonic } from \"../../api/mnemonic\";\r\nimport Form from \"../forms/Form\";\r\nimport FormGroup from \"../forms/GroupForm\";\r\nimport Button from \"../other/Button\";\r\n\r\nfunction ReportMnemonic({ history, match, location }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const { params } = match;\r\n\r\n  const handleGetMnemonic = async () => {\r\n    try {\r\n      await getMnemonic(params.id);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetMnemonic();\r\n  }, []);\r\n\r\n  const handleReport = async () => {\r\n    await reportMnemonic({ _id: params.id, title, content });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleReport} location={location}>\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <Button type=\"submit\">Report</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportMnemonic;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\MessageBox.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\colors.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Editor.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportUser.jsx",["175"],"import React, { useEffect, useState } from \"react\";\r\nimport { getUser, reportUser } from \"../../api/user\";\r\nimport Form from \"../forms/Form\";\r\nimport FormGroup from \"../forms/GroupForm\";\r\nimport Button from \"../other/Button\";\r\n\r\nfunction ReportUser({ history, match, location }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const { params } = match;\r\n\r\n  const handleGetUser = async () => {\r\n    try {\r\n      await getUser(params.id);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetUser();\r\n  }, []);\r\n\r\n  const handleReport = async () => {\r\n    await reportUser({ _id: params.id, title, content });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleReport} location={location}>\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <Button type=\"submit\">Report</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportUser;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\user.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\mnemonic.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\category.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\me.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MeScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\reportWebVitals.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonics.jsx",["176","177","178"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Loading.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\GroupFormDropdown.jsx",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"183"},{"ruleId":"181","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":23,"column":6,"nodeType":"187","endLine":23,"endColumn":8,"suggestions":"188"},{"ruleId":"179","replacedBy":"189"},{"ruleId":"181","replacedBy":"190"},{"ruleId":"179","replacedBy":"191"},{"ruleId":"181","replacedBy":"192"},{"ruleId":"179","replacedBy":"193"},{"ruleId":"181","replacedBy":"194"},{"ruleId":"185","severity":1,"message":"195","line":23,"column":6,"nodeType":"187","endLine":23,"endColumn":8,"suggestions":"196"},{"ruleId":"185","severity":1,"message":"197","line":21,"column":6,"nodeType":"187","endLine":21,"endColumn":8,"suggestions":"198"},{"ruleId":"185","severity":1,"message":"199","line":27,"column":6,"nodeType":"187","endLine":27,"endColumn":8,"suggestions":"200"},{"ruleId":"185","severity":1,"message":"197","line":23,"column":6,"nodeType":"187","endLine":23,"endColumn":8,"suggestions":"201"},{"ruleId":"185","severity":1,"message":"195","line":23,"column":6,"nodeType":"187","endLine":23,"endColumn":8,"suggestions":"202"},{"ruleId":"185","severity":1,"message":"203","line":60,"column":6,"nodeType":"187","endLine":60,"endColumn":8,"suggestions":"204"},{"ruleId":"185","severity":1,"message":"205","line":64,"column":6,"nodeType":"187","endLine":64,"endColumn":14,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":86,"column":9,"nodeType":"209","messageId":"210","endLine":86,"endColumn":21},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],["211"],["212"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.","ArrayExpression",["213"],["211"],["212"],["211"],["212"],["211"],["212"],"React Hook useEffect has a missing dependency: 'handleGetUser'. Either include it or remove the dependency array.",["214"],"React Hook useEffect has a missing dependency: 'handleGetMnemonic'. Either include it or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'handleGet' and 'match.params.id'. Either include them or remove the dependency array.",["216"],["217"],["218"],"React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["219"],"React Hook useEffect has a missing dependency: 'handleGet'. Either include it or remove the dependency array.",["220"],"no-unused-vars","'handleDelete' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"225","fix":"229"},{"desc":"223","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [location]",{"range":"235","text":"236"},"Update the dependencies array to be: [handleGetUser]",{"range":"237","text":"238"},"Update the dependencies array to be: [handleGetMnemonic]",{"range":"239","text":"240"},"Update the dependencies array to be: [handleGet, match.params.id]",{"range":"241","text":"242"},{"range":"243","text":"240"},{"range":"244","text":"238"},"Update the dependencies array to be: [location.search]",{"range":"245","text":"246"},"Update the dependencies array to be: [filter, handleGet]",{"range":"247","text":"248"},[646,648],"[location]",[620,622],"[handleGetUser]",[577,579],"[handleGetMnemonic]",[890,892],"[handleGet, match.params.id]",[663,665],[635,637],[1790,1792],"[location.search]",[1866,1874],"[filter, handleGet]"]