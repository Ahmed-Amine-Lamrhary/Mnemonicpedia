[{"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\index.js":"1","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\NotFoundScreen.jsx":"2","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PrivateRoute.jsx":"3","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PublicRoute.jsx":"4","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\LoginScreen.jsx":"5","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Form.jsx":"6","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navbar.jsx":"7","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormCheck.jsx":"8","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Button.jsx":"9","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\RegisterScreen.jsx":"10","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\config.js":"11","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Logo.jsx":"12","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\HomeScreen.jsx":"13","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonic.jsx":"14","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\UserScreen.jsx":"15","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MnemonicScreen.jsx":"16","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\App.js":"17","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormNavigation.jsx":"18","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navs.jsx":"19","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\Submit.jsx":"20","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Nothing.jsx":"21","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportMnemonic.jsx":"22","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\MessageBox.jsx":"23","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\colors.js":"24","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Editor.jsx":"25","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportUser.jsx":"26","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\user.js":"27","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\mnemonic.js":"28","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\category.js":"29","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\me.js":"30","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MeScreen.jsx":"31","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\reportWebVitals.js":"32","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonics.jsx":"33","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Loading.jsx":"34","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\GroupFormDropdown.jsx":"35","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\auth.js":"36","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormGroup.jsx":"37","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\report.js":"38"},{"size":690,"mtime":1611604493963,"results":"39","hashOfConfig":"40"},{"size":347,"mtime":1611955278519,"results":"41","hashOfConfig":"40"},{"size":578,"mtime":1613402449711,"results":"42","hashOfConfig":"40"},{"size":406,"mtime":1613402454886,"results":"43","hashOfConfig":"40"},{"size":1626,"mtime":1612795449039,"results":"44","hashOfConfig":"40"},{"size":571,"mtime":1612644755391,"results":"45","hashOfConfig":"40"},{"size":1400,"mtime":1613402444428,"results":"46","hashOfConfig":"40"},{"size":607,"mtime":1612796680077,"results":"47","hashOfConfig":"40"},{"size":822,"mtime":1612797017978,"results":"48","hashOfConfig":"40"},{"size":1907,"mtime":1612795465339,"results":"49","hashOfConfig":"40"},{"size":123,"mtime":1611579584982,"results":"50","hashOfConfig":"40"},{"size":304,"mtime":1612797117321,"results":"51","hashOfConfig":"40"},{"size":210,"mtime":1612472202178,"results":"52","hashOfConfig":"40"},{"size":2131,"mtime":1613402709545,"results":"53","hashOfConfig":"40"},{"size":1262,"mtime":1612035669930,"results":"54","hashOfConfig":"40"},{"size":666,"mtime":1611955170894,"results":"55","hashOfConfig":"40"},{"size":2875,"mtime":1613405361305,"results":"56","hashOfConfig":"40"},{"size":416,"mtime":1612795971248,"results":"57","hashOfConfig":"40"},{"size":562,"mtime":1611694443700,"results":"58","hashOfConfig":"40"},{"size":4575,"mtime":1612815007354,"results":"59","hashOfConfig":"40"},{"size":155,"mtime":1611660103138,"results":"60","hashOfConfig":"40"},{"size":1338,"mtime":1612811514797,"results":"61","hashOfConfig":"40"},{"size":1191,"mtime":1611694305402,"results":"62","hashOfConfig":"40"},{"size":247,"mtime":1611694572772,"results":"63","hashOfConfig":"40"},{"size":922,"mtime":1612302289726,"results":"64","hashOfConfig":"40"},{"size":1302,"mtime":1612811540593,"results":"65","hashOfConfig":"40"},{"size":354,"mtime":1612811459578,"results":"66","hashOfConfig":"40"},{"size":1354,"mtime":1612811447033,"results":"67","hashOfConfig":"40"},{"size":376,"mtime":1612342901645,"results":"68","hashOfConfig":"40"},{"size":863,"mtime":1613404655828,"results":"69","hashOfConfig":"40"},{"size":4404,"mtime":1613404655068,"results":"70","hashOfConfig":"40"},{"size":362,"mtime":1606146488980,"results":"71","hashOfConfig":"40"},{"size":3975,"mtime":1613402791514,"results":"72","hashOfConfig":"40"},{"size":156,"mtime":1612090959882,"results":"73","hashOfConfig":"40"},{"size":586,"mtime":1612795433643,"results":"74","hashOfConfig":"40"},{"size":1286,"mtime":1613405424805,"results":"75","hashOfConfig":"40"},{"size":409,"mtime":1612796542790,"results":"76","hashOfConfig":"40"},{"size":562,"mtime":1612811477059,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1547hz0",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\index.js",[],["166","167"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\NotFoundScreen.jsx",[],["168","169"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PrivateRoute.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PublicRoute.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\LoginScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Form.jsx",[],["170","171"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navbar.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormCheck.jsx",[],["172","173"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Button.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\RegisterScreen.jsx",[],["174","175"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\config.js",[],["176","177"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Logo.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\HomeScreen.jsx",[],["178","179"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonic.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\UserScreen.jsx",["180"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { getUser } from \"../../api/user\";\r\nimport Mnemonics from \"../other/Mnemonics\";\r\nimport Navs from \"../other/Navs\";\r\n\r\nfunction User({ history, match }) {\r\n  const [user, setUser] = useState({});\r\n  const { url, params } = match;\r\n\r\n  const handleGetUser = async () => {\r\n    try {\r\n      const { data: user } = await getUser(params.id);\r\n      setUser(user);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetUser();\r\n  }, []);\r\n\r\n  const navs = () => {\r\n    return [\r\n      {\r\n        to: `${url}/posts`,\r\n        text: \"Posts\",\r\n      },\r\n      {\r\n        to: `/report-user/${params.id}`,\r\n        text: \"Report User\",\r\n      },\r\n    ];\r\n  };\r\n\r\n  const { fullname, username } = user;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Navs navs={navs()} />\r\n\r\n      <div>\r\n        <h1>{fullname}</h1>\r\n        <h5>@{username}</h5>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route\r\n          path=\"/user/:id/posts\"\r\n          render={() => <Mnemonics query={{ author: params.id }} />}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MnemonicScreen.jsx",["181"],"import React, { useEffect, useState } from \"react\";\r\nimport { getMnemonic } from \"../../api/mnemonic\";\r\nimport Mnemonic from \"../other/Mnemonic\";\r\n\r\nfunction MnemonicScreen({ history, match }) {\r\n  const [mnemonic, setMnemonic] = useState({});\r\n  const { params } = match;\r\n\r\n  const handleGetMnemonic = async () => {\r\n    try {\r\n      const { data: mnemonic } = await getMnemonic(params.id);\r\n      setMnemonic(mnemonic);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetMnemonic();\r\n  }, []);\r\n\r\n  return <Mnemonic mnemonic={mnemonic} />;\r\n}\r\n\r\nexport default MnemonicScreen;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\App.js",["182"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormNavigation.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navs.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\Submit.jsx",["183"],"import React, { useEffect, useState } from \"react\";\r\nimport Form from \"../forms/Form\";\r\nimport FormGroup from \"../forms/FormGroup\";\r\nimport Button from \"../other/Button\";\r\nimport Editor from \"../forms/Editor\";\r\nimport { getCategories } from \"../../api/category\";\r\nimport {\r\n  createMnemonic,\r\n  deleteMnemonic,\r\n  getMnemonic,\r\n  updateMnemonic,\r\n} from \"../../api/mnemonic\";\r\nimport GroupFormDropdown from \"../forms/GroupFormDropdown\";\r\nimport MessageBox from \"../other/MessageBox\";\r\n\r\nfunction Submit({ match, history }) {\r\n  const [isMessageBox, setIsMessageBox] = useState(false);\r\n\r\n  const [operation, setOperation] = useState(\"create\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      setOperation(\"edit\");\r\n      handleGet();\r\n    }\r\n  }, []);\r\n\r\n  const handleGet = async () => {\r\n    try {\r\n      const {\r\n        data: { title, content, categories },\r\n      } = await getMnemonic(match.params.id);\r\n      setTitle(title);\r\n      setContent(content);\r\n      setSelectedCategories(categories);\r\n    } catch (error) {\r\n      console.log(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  const handleGetCategories = async (searched) => {\r\n    setCategory(searched);\r\n    const selectedCategoriesIds = selectedCategories.map((category) => {\r\n      return category._id;\r\n    });\r\n\r\n    try {\r\n      const { data } = await getCategories({\r\n        text: searched,\r\n        exclude: selectedCategoriesIds,\r\n      });\r\n      setCategories(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const selectCategory = (item) => {\r\n    const selected = [...selectedCategories, item];\r\n    setSelectedCategories(selected);\r\n\r\n    const newCategories = categories.filter(\r\n      (category) => category._id !== item._id\r\n    );\r\n    setCategories(newCategories);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const categoriesIds = selectedCategories.map((category) => category._id);\r\n    let value;\r\n    if (operation === \"create\") {\r\n      await createMnemonic({ title, content, categories: categoriesIds });\r\n      value = \"created\";\r\n    } else {\r\n      await updateMnemonic({\r\n        _id: match.params.id,\r\n        title,\r\n        content,\r\n        categories: categoriesIds,\r\n      });\r\n      value = \"edited\";\r\n    }\r\n    history.push({\r\n      pathname: \"/\",\r\n      state: {\r\n        message: {\r\n          value: `Your mnemonic has been ${value} successfully. We will notify you once it is publlished.`,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await deleteMnemonic(match.params.id);\r\n      history.push({\r\n        pathname: \"/\",\r\n        state: {\r\n          message: {\r\n            value: \"Your mnemonic has been deleted successfully\",\r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error.response.data.error);\r\n    } finally {\r\n      setIsMessageBox(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <MessageBox\r\n        visible={isMessageBox}\r\n        onClose={() => setIsMessageBox(false)}\r\n        title=\"Are you sure you want to delete this mnemonic?\"\r\n        buttons={[\r\n          {\r\n            text: \"No\",\r\n            bgColor: \"primary\",\r\n            onClick: () => setIsMessageBox(false),\r\n          },\r\n          {\r\n            text: \"Yes\",\r\n            bgColor: \"danger\",\r\n            onClick: () => handleDelete(),\r\n          },\r\n        ]}\r\n      />\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n\r\n        <Editor label=\"Content\" value={content} onChange={setContent} />\r\n\r\n        <br />\r\n\r\n        <GroupFormDropdown\r\n          type=\"text\"\r\n          label=\"Categories\"\r\n          value={category}\r\n          items={categories}\r\n          onChange={(e) => handleGetCategories(e.target.value)}\r\n          onSelect={selectCategory}\r\n          selected={selectedCategories}\r\n        />\r\n\r\n        <br />\r\n        <Button type=\"submit\">{operation}</Button>\r\n        {operation === \"edit\" && (\r\n          <Button bgColor=\"danger\" onClick={() => setIsMessageBox(true)}>\r\n            Delete\r\n          </Button>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Submit;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Nothing.jsx",[],["184","185"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportMnemonic.jsx",["186"],"import React, { useEffect, useState } from \"react\";\r\nimport { getMnemonic } from \"../../api/mnemonic\";\r\nimport { reportMnemonic } from \"../../api/report\";\r\nimport Form from \"../forms/Form\";\r\nimport FormGroup from \"../forms/FormGroup\";\r\nimport Button from \"../other/Button\";\r\n\r\nfunction ReportMnemonic({ history, match, location }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const { params } = match;\r\n\r\n  const handleGetMnemonic = async () => {\r\n    try {\r\n      await getMnemonic(params.id);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetMnemonic();\r\n  }, []);\r\n\r\n  const handleReport = async () => {\r\n    await reportMnemonic({ _id: params.id, title, content });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleReport} location={location}>\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <Button type=\"submit\">Report</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportMnemonic;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\MessageBox.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\colors.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Editor.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportUser.jsx",["187"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\user.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\mnemonic.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\category.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\me.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MeScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\reportWebVitals.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonics.jsx",["188","189"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Loading.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\GroupFormDropdown.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\auth.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormGroup.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\report.js",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"190","replacedBy":"194"},{"ruleId":"192","replacedBy":"195"},{"ruleId":"190","replacedBy":"196"},{"ruleId":"192","replacedBy":"197"},{"ruleId":"190","replacedBy":"198"},{"ruleId":"192","replacedBy":"199"},{"ruleId":"190","replacedBy":"200"},{"ruleId":"192","replacedBy":"201"},{"ruleId":"190","replacedBy":"202"},{"ruleId":"192","replacedBy":"203"},{"ruleId":"190","replacedBy":"204"},{"ruleId":"192","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":23,"column":6,"nodeType":"208","endLine":23,"endColumn":8,"suggestions":"209"},{"ruleId":"206","severity":1,"message":"210","line":21,"column":6,"nodeType":"208","endLine":21,"endColumn":8,"suggestions":"211"},{"ruleId":"206","severity":1,"message":"212","line":54,"column":6,"nodeType":"208","endLine":54,"endColumn":16,"suggestions":"213"},{"ruleId":"206","severity":1,"message":"214","line":31,"column":6,"nodeType":"208","endLine":31,"endColumn":8,"suggestions":"215"},{"ruleId":"190","replacedBy":"216"},{"ruleId":"192","replacedBy":"217"},{"ruleId":"206","severity":1,"message":"210","line":24,"column":6,"nodeType":"208","endLine":24,"endColumn":8,"suggestions":"218"},{"ruleId":"206","severity":1,"message":"207","line":24,"column":6,"nodeType":"208","endLine":24,"endColumn":8,"suggestions":"219"},{"ruleId":"206","severity":1,"message":"220","line":67,"column":6,"nodeType":"208","endLine":67,"endColumn":14,"suggestions":"221"},{"ruleId":"206","severity":1,"message":"222","line":72,"column":6,"nodeType":"208","endLine":72,"endColumn":8,"suggestions":"223"},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],["224"],["225"],["224"],["225"],["224"],["225"],["224"],["225"],["224"],["225"],["224"],["225"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleGetUser'. Either include it or remove the dependency array.","ArrayExpression",["226"],"React Hook useEffect has a missing dependency: 'handleGetMnemonic'. Either include it or remove the dependency array.",["227"],"React Hook useEffect has a missing dependency: 'toastConfig'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has missing dependencies: 'handleGet' and 'match.params.id'. Either include them or remove the dependency array.",["229"],["224"],["225"],["230"],["231"],"React Hook useEffect has a missing dependency: 'handleGet'. Either include it or remove the dependency array.",["232"],"React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["233"],"no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"236","fix":"242"},{"desc":"234","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [handleGetUser]",{"range":"248","text":"249"},"Update the dependencies array to be: [handleGetMnemonic]",{"range":"250","text":"251"},"Update the dependencies array to be: [location, toastConfig]",{"range":"252","text":"253"},"Update the dependencies array to be: [handleGet, match.params.id]",{"range":"254","text":"255"},{"range":"256","text":"251"},{"range":"257","text":"249"},"Update the dependencies array to be: [filter, handleGet]",{"range":"258","text":"259"},"Update the dependencies array to be: [location.search]",{"range":"260","text":"261"},[620,622],"[handleGetUser]",[577,579],"[handleGetMnemonic]",[1910,1920],"[location, toastConfig]",[1018,1020],"[handleGet, match.params.id]",[699,701],[671,673],[1938,1946],"[filter, handleGet]",[2108,2110],"[location.search]"]