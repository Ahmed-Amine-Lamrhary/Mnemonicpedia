[{"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\index.js":"1","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\NotFoundScreen.jsx":"2","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PrivateRoute.jsx":"3","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PublicRoute.jsx":"4","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\LoginScreen.jsx":"5","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Form.jsx":"6","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navbar.jsx":"7","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\GroupForm.jsx":"8","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormCheck.jsx":"9","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Button.jsx":"10","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\RegisterScreen.jsx":"11","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\config.js":"12","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Logo.jsx":"13","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\HomeScreen.jsx":"14","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonic.jsx":"15","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\UserScreen.jsx":"16","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MnemonicScreen.jsx":"17","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\App.js":"18","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormNavigation.jsx":"19","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navs.jsx":"20","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\Submit.jsx":"21","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Nothing.jsx":"22","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportMnemonic.jsx":"23","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\MessageBox.jsx":"24","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\colors.js":"25","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Editor.jsx":"26","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportUser.jsx":"27","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\user.js":"28","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\mnemonic.js":"29","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\category.js":"30","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\me.js":"31","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MeScreen.jsx":"32","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\reportWebVitals.js":"33","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonics.jsx":"34","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Loading.jsx":"35","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\GroupFormDropdown.jsx":"36"},{"size":690,"mtime":1611604493963,"results":"37","hashOfConfig":"38"},{"size":347,"mtime":1611955278519,"results":"39","hashOfConfig":"38"},{"size":408,"mtime":1611951125137,"results":"40","hashOfConfig":"38"},{"size":409,"mtime":1611951119256,"results":"41","hashOfConfig":"38"},{"size":1479,"mtime":1612029042525,"results":"42","hashOfConfig":"38"},{"size":544,"mtime":1612612579647,"results":"43","hashOfConfig":"38"},{"size":1415,"mtime":1611951324782,"results":"44","hashOfConfig":"38"},{"size":699,"mtime":1612302428983,"results":"45","hashOfConfig":"38"},{"size":641,"mtime":1611738510776,"results":"46","hashOfConfig":"38"},{"size":1117,"mtime":1612089685107,"results":"47","hashOfConfig":"38"},{"size":1905,"mtime":1612029037477,"results":"48","hashOfConfig":"38"},{"size":123,"mtime":1611579584982,"results":"49","hashOfConfig":"38"},{"size":504,"mtime":1611600357014,"results":"50","hashOfConfig":"38"},{"size":210,"mtime":1612472202178,"results":"51","hashOfConfig":"38"},{"size":4041,"mtime":1612475099580,"results":"52","hashOfConfig":"38"},{"size":1262,"mtime":1612035669930,"results":"53","hashOfConfig":"38"},{"size":666,"mtime":1611955170894,"results":"54","hashOfConfig":"38"},{"size":2885,"mtime":1612614162299,"results":"55","hashOfConfig":"38"},{"size":1031,"mtime":1611603073478,"results":"56","hashOfConfig":"38"},{"size":562,"mtime":1611694443700,"results":"57","hashOfConfig":"38"},{"size":3017,"mtime":1612476011760,"results":"58","hashOfConfig":"38"},{"size":155,"mtime":1611660103138,"results":"59","hashOfConfig":"38"},{"size":1302,"mtime":1612029147382,"results":"60","hashOfConfig":"38"},{"size":1191,"mtime":1611694305402,"results":"61","hashOfConfig":"38"},{"size":247,"mtime":1611694572772,"results":"62","hashOfConfig":"38"},{"size":922,"mtime":1612302289726,"results":"63","hashOfConfig":"38"},{"size":1266,"mtime":1612030722286,"results":"64","hashOfConfig":"38"},{"size":564,"mtime":1612032667593,"results":"65","hashOfConfig":"38"},{"size":1615,"mtime":1612603673572,"results":"66","hashOfConfig":"38"},{"size":376,"mtime":1612342901645,"results":"67","hashOfConfig":"38"},{"size":2193,"mtime":1612613983393,"results":"68","hashOfConfig":"38"},{"size":3883,"mtime":1612035754377,"results":"69","hashOfConfig":"38"},{"size":362,"mtime":1606146488980,"results":"70","hashOfConfig":"38"},{"size":5093,"mtime":1612606469292,"results":"71","hashOfConfig":"38"},{"size":156,"mtime":1612090959882,"results":"72","hashOfConfig":"38"},{"size":585,"mtime":1612302966439,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1547hz0",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"79"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"79"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"87"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"87"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\index.js",[],["157","158"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\NotFoundScreen.jsx",[],["159","160"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PrivateRoute.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\routes\\PublicRoute.jsx",[],["161","162"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\LoginScreen.jsx",[],["163","164"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Form.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navbar.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\GroupForm.jsx",[],["165","166"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormCheck.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Button.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\RegisterScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\config.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Logo.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\HomeScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonic.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\UserScreen.jsx",["167"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { getUser } from \"../../api/user\";\r\nimport Mnemonics from \"../other/Mnemonics\";\r\nimport Navs from \"../other/Navs\";\r\n\r\nfunction User({ history, match }) {\r\n  const [user, setUser] = useState({});\r\n  const { url, params } = match;\r\n\r\n  const handleGetUser = async () => {\r\n    try {\r\n      const { data: user } = await getUser(params.id);\r\n      setUser(user);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetUser();\r\n  }, []);\r\n\r\n  const navs = () => {\r\n    return [\r\n      {\r\n        to: `${url}/posts`,\r\n        text: \"Posts\",\r\n      },\r\n      {\r\n        to: `/report-user/${params.id}`,\r\n        text: \"Report User\",\r\n      },\r\n    ];\r\n  };\r\n\r\n  const { fullname, username } = user;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Navs navs={navs()} />\r\n\r\n      <div>\r\n        <h1>{fullname}</h1>\r\n        <h5>@{username}</h5>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route\r\n          path=\"/user/:id/posts\"\r\n          render={() => <Mnemonics query={{ author: params.id }} />}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MnemonicScreen.jsx",["168"],"import React, { useEffect, useState } from \"react\";\r\nimport { getMnemonic } from \"../../api/mnemonic\";\r\nimport Mnemonic from \"../other/Mnemonic\";\r\n\r\nfunction MnemonicScreen({ history, match }) {\r\n  const [mnemonic, setMnemonic] = useState({});\r\n  const { params } = match;\r\n\r\n  const handleGetMnemonic = async () => {\r\n    try {\r\n      const { data: mnemonic } = await getMnemonic(params.id);\r\n      setMnemonic(mnemonic);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetMnemonic();\r\n  }, []);\r\n\r\n  return <Mnemonic mnemonic={mnemonic} />;\r\n}\r\n\r\nexport default MnemonicScreen;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\App.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\FormNavigation.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Navs.jsx",[],["169","170"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\Submit.jsx",["171"],"import React, { useEffect, useState } from \"react\";\r\nimport Form from \"../forms/Form\";\r\nimport FormGroup from \"../forms/GroupForm\";\r\nimport Button from \"../other/Button\";\r\nimport Editor from \"../forms/Editor\";\r\nimport { getCategories } from \"../../api/category\";\r\nimport {\r\n  createMnemonic,\r\n  getMnemonic,\r\n  updateMnemonic,\r\n} from \"../../api/mnemonic\";\r\nimport GroupFormDropdown from \"../forms/GroupFormDropdown\";\r\n\r\nfunction Submit({ match, history }) {\r\n  const [operation, setOperation] = useState(\"create\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      setOperation(\"edit\");\r\n      handleGet();\r\n    }\r\n  }, []);\r\n\r\n  const handleGet = async () => {\r\n    try {\r\n      const {\r\n        data: { title, content, categories },\r\n      } = await getMnemonic(match.params.id);\r\n      setTitle(title);\r\n      setContent(content);\r\n      setCategories(categories);\r\n    } catch (error) {\r\n      console.log(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  const handleGetCategories = async (searched) => {\r\n    setCategory(searched);\r\n    const selectedCategoriesIds = selectedCategories.map((category) => {\r\n      return category._id;\r\n    });\r\n\r\n    try {\r\n      const { data } = await getCategories({\r\n        text: searched,\r\n        exclude: selectedCategoriesIds,\r\n      });\r\n      setCategories(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const selectCategory = (item) => {\r\n    const selected = [...selectedCategories, item];\r\n    setSelectedCategories(selected);\r\n\r\n    const newCategories = categories.filter(\r\n      (category) => category._id !== item._id\r\n    );\r\n    setCategories(newCategories);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (operation === \"create\")\r\n      await createMnemonic({ title, content, categories: selectedCategories });\r\n    else\r\n      await updateMnemonic({\r\n        _id: match.params.id,\r\n        title,\r\n        content,\r\n        categories: selectedCategories,\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n\r\n        <Editor label=\"Content\" value={content} onChange={setContent} />\r\n\r\n        <br />\r\n\r\n        <GroupFormDropdown\r\n          type=\"text\"\r\n          label=\"Categories\"\r\n          value={category}\r\n          items={categories}\r\n          onChange={(e) => handleGetCategories(e.target.value)}\r\n          onSelect={selectCategory}\r\n          selected={selectedCategories}\r\n        />\r\n\r\n        <br />\r\n        <Button type=\"submit\">{operation}</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Submit;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Nothing.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportMnemonic.jsx",["172"],"import React, { useEffect, useState } from \"react\";\r\nimport { getMnemonic, reportMnemonic } from \"../../api/mnemonic\";\r\nimport Form from \"../forms/Form\";\r\nimport FormGroup from \"../forms/GroupForm\";\r\nimport Button from \"../other/Button\";\r\n\r\nfunction ReportMnemonic({ history, match, location }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const { params } = match;\r\n\r\n  const handleGetMnemonic = async () => {\r\n    try {\r\n      await getMnemonic(params.id);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetMnemonic();\r\n  }, []);\r\n\r\n  const handleReport = async () => {\r\n    await reportMnemonic({ _id: params.id, title, content });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleReport} location={location}>\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <Button type=\"submit\">Report</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportMnemonic;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\MessageBox.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\utility\\colors.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\Editor.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\ReportUser.jsx",["173"],"import React, { useEffect, useState } from \"react\";\r\nimport { getUser, reportUser } from \"../../api/user\";\r\nimport Form from \"../forms/Form\";\r\nimport FormGroup from \"../forms/GroupForm\";\r\nimport Button from \"../other/Button\";\r\n\r\nfunction ReportUser({ history, match, location }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const { params } = match;\r\n\r\n  const handleGetUser = async () => {\r\n    try {\r\n      await getUser(params.id);\r\n    } catch (error) {\r\n      console.error(error);\r\n      history.push(\"/notFound\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetUser();\r\n  }, []);\r\n\r\n  const handleReport = async () => {\r\n    await reportUser({ _id: params.id, title, content });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleReport} location={location}>\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <FormGroup\r\n          type=\"text\"\r\n          label=\"Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <Button type=\"submit\">Report</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportUser;\r\n","G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\user.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\mnemonic.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\category.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\api\\me.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\screens\\MeScreen.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\reportWebVitals.js",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Mnemonics.jsx",["174","175"],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\other\\Loading.jsx",[],"G:\\Portfolio\\mnemonicpedia\\frontend\\src\\components\\forms\\GroupFormDropdown.jsx",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"176","replacedBy":"180"},{"ruleId":"178","replacedBy":"181"},{"ruleId":"176","replacedBy":"182"},{"ruleId":"178","replacedBy":"183"},{"ruleId":"176","replacedBy":"184"},{"ruleId":"178","replacedBy":"185"},{"ruleId":"176","replacedBy":"186"},{"ruleId":"178","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":23,"column":6,"nodeType":"190","endLine":23,"endColumn":8,"suggestions":"191"},{"ruleId":"188","severity":1,"message":"192","line":21,"column":6,"nodeType":"190","endLine":21,"endColumn":8,"suggestions":"193"},{"ruleId":"176","replacedBy":"194"},{"ruleId":"178","replacedBy":"195"},{"ruleId":"188","severity":1,"message":"196","line":27,"column":6,"nodeType":"190","endLine":27,"endColumn":8,"suggestions":"197"},{"ruleId":"188","severity":1,"message":"192","line":23,"column":6,"nodeType":"190","endLine":23,"endColumn":8,"suggestions":"198"},{"ruleId":"188","severity":1,"message":"189","line":23,"column":6,"nodeType":"190","endLine":23,"endColumn":8,"suggestions":"199"},{"ruleId":"188","severity":1,"message":"200","line":58,"column":6,"nodeType":"190","endLine":58,"endColumn":14,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":87,"column":9,"nodeType":"204","messageId":"205","endLine":87,"endColumn":21},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],["206"],["207"],["206"],["207"],["206"],["207"],["206"],["207"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleGetUser'. Either include it or remove the dependency array.","ArrayExpression",["208"],"React Hook useEffect has a missing dependency: 'handleGetMnemonic'. Either include it or remove the dependency array.",["209"],["206"],["207"],"React Hook useEffect has missing dependencies: 'handleGet' and 'match.params.id'. Either include them or remove the dependency array.",["210"],["211"],["212"],"React Hook useEffect has a missing dependency: 'handleGet'. Either include it or remove the dependency array.",["213"],"no-unused-vars","'handleDelete' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"216","fix":"220"},{"desc":"214","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [handleGetUser]",{"range":"224","text":"225"},"Update the dependencies array to be: [handleGetMnemonic]",{"range":"226","text":"227"},"Update the dependencies array to be: [handleGet, match.params.id]",{"range":"228","text":"229"},{"range":"230","text":"227"},{"range":"231","text":"225"},"Update the dependencies array to be: [filter, handleGet]",{"range":"232","text":"233"},[620,622],"[handleGetUser]",[577,579],"[handleGetMnemonic]",[890,892],"[handleGet, match.params.id]",[663,665],[635,637],[1714,1722],"[filter, handleGet]"]